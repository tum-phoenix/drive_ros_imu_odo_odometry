<launch>
    <!-- odometer delta input topic -->
    <arg name="odo_topic" default="/from_mav/odometer_delta"/>
    <!-- IMU delta input topic -->
    <arg name="imu_topic" default="/from_mav/imu"/>

    <!-- rate at which the odometry calculation will run (limited by the input topics rates) -->
    <arg name="rate" default="80"/>
    <!-- size of subscriber and sync policy queues -->
    <arg name="queue_size" default="5"/>
    <!-- if this time difference between measurments exceeds this threshold [sec] -> reset the filter -->
    <arg name="reset_filter_thres" default="0.1"/>

    <!-- define nice value of process (lower means higher priority) [-20;19] -->
    <!-- more infos: https://en.wikipedia.org/wiki/Nice_(Unix) -->
    <arg name="nice_val" default="-2"/>

    <!-- tf parent frame of published tf -->
    <arg name="tf_parent" default="odometry"/>
    <!-- tf child frame of published tf -->
    <arg name="tf_child" default="rear_axis_middle_ground"/>

    <!-- debug state to file -->
    <arg name="debug_file" default="true" />
    <arg name="debug_file_path" default="/tmp/odom_debug.csv" />

    <!-- forward output to [screen|log] -->
    <arg name="output" default="screen"/>

    <node name="imu_ros_odometry" pkg="drive_ros_imu_odo_odometry" type="drive_ros_imu_odo_odometry_node"
          output="$(arg output)" launch-prefix="nice -n $(arg nice_val)" >
        <remap from="~/odo_in" to="$(arg odo_topic)"/>
        <remap from="~/imu_in" to="$(arg imu_topic)"/>
        <param name="rate" type="int" value="$(arg rate)" />
        <param name="queue_size" type="int" value="$(arg queue_size)" />
        <param name="reset_filter_thres" type="double" value="$(arg reset_filter_thres)" />
        <param name="tf_parent" type="str" value="$(arg tf_parent)" />
        <param name="tf_child" type="str" value="$(arg tf_child)" />
        <param name="debug_file" type="bool" value ="$(arg debug_file)" />
        <param name="debug_file_path" type="str" value ="$(arg debug_file_path)" />
        <rosparam command="load" file="$(find drive_ros_imu_odo_odometry)/config/kalman_cov.yaml"/>
    </node>
</launch>
