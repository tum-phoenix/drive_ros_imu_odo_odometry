<launch>
    <!-- vehicle name e.g. cc2017_car -->
    <arg name="vehicle" default=""/>

    <!-- prediction odometer topic -->
    <arg name="pred_odo_topic_name" default=""/>
    <arg name="pred_odo_topic_rate" default="0"/>

    <!-- correction odometer topic -->
    <arg name="corr_odo_topic_name" default=""/>
    <arg name="corr_odo_topic_rate" default="0"/>

    <!-- prediction IMU topic -->
    <arg name="pred_imu_topic_name" default=""/>
    <arg name="pred_imu_topic_rate" default="0"/>

    <!-- correction IMU topic -->
    <arg name="corr_imu_topic_name" default=""/>
    <arg name="corr_imu_topic_rate" default="0"/>

    <!-- fused odometry output -->
    <arg name="odo_out_topic" default="odom" />

    <!-- tf parent frame of published tf -->
    <arg name="static_frame" default="odom"/>

    <!-- tf child frame of published tf -->
    <arg name="moving_frame" default="rear_axis_middle_ground"/>

    <!-- size of subscriber and sync policy queues -->
    <arg name="queue_size" default="10"/>

    <!--
         maximum time allowed between two measurements (imu+odo).
         If this time difference between measurments exceeds this threshold [sec]
         -> reset the filter covariances
         -> typically occurs when running a bag in a loop -> big time jump
    -->
    <arg name="time_threshold" default="0.5"/>

    <!--
        vehicle model being used. Possible vehicle models available:
         * CTRA (Constant Turn Rate and Acceleration)
         * CTRV (Constant Turn Rate and Velocity)

        All model specific parameters should be defined in the respective vehicle config file (see below).
    -->
    <arg name="vehicle_model" default="CTRV"/>


    <!-- vehicle configuration file it should be named: <vehicle_model>_<vehicle>.yaml -->
    <arg name="vehicle_config" default="$(find drive_ros_localize_odom_fusion)/config/$(arg vehicle_model)_$(arg vehicle).yaml" />

    <!-- debug odometry output to file -->
    <arg name="debug_out" default="false" />
    <arg name="debug_out_file_path" default="/tmp/out_debug_2.csv" />

    <!-- forward output to [screen|log] -->
    <arg name="output" default="screen"/>

    <!-- define nice value of process (lower means higher priority) [-20;19] -->
    <!-- more infos: https://en.wikipedia.org/wiki/Nice_(Unix) -->
    <arg name="nice_val_pre" default="nice -n -5"/>

    <node name="odom_fusion_$(arg vehicle)_$(arg vehicle_model)"
          pkg="drive_ros_localize_odom_fusion"
          type="drive_ros_localize_odom_fusion_node"
          output="$(arg output)"
          launch-prefix="$(arg nice_val_pre)" >
        <param name="pred_odo_topic_name" type="str"    value="$(arg pred_odo_topic_name)"/>
        <param name="pred_odo_topic_rate" type="int"    value="$(arg pred_odo_topic_rate)"/>
        <param name="corr_odo_topic_name" type="str"    value="$(arg corr_odo_topic_name)"/>
        <param name="corr_odo_topic_rate" type="int"    value="$(arg corr_odo_topic_rate)"/>
        <param name="pred_imu_topic_name" type="str"    value="$(arg pred_imu_topic_name)"/>
        <param name="pred_imu_topic_rate" type="int"    value="$(arg pred_imu_topic_rate)"/>
        <param name="corr_imu_topic_name" type="str"    value="$(arg corr_imu_topic_name)"/>
        <param name="corr_imu_topic_rate" type="int"    value="$(arg corr_imu_topic_rate)"/>
        <param name="odo_out_topic"       type="str"    value="$(arg odo_out_topic)" />
        <param name="queue_size"          type="int"    value="$(arg queue_size)" />
        <param name="time_threshold"      type="double" value="$(arg time_threshold)" />
        <param name="vehicle_model"       type="str"    value="$(arg vehicle_model)" />
        <param name="static_frame"        type="str"    value="$(arg static_frame)" />
        <param name="moving_frame"        type="str"    value="$(arg moving_frame)" />
        <param name="debug_out"           type="bool"   value="$(arg debug_out)" />
        <param name="debug_out_file_path" type="str"    value="$(arg debug_out_file_path)" />
        <rosparam command="load" file="$(arg vehicle_config)"/>
    </node>
</launch>
